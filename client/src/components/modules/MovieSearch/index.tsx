'use client';

import { useEffect, useState } from 'react';

import { searchMovies } from '@/lib/api/movies/search-movies';
import { useDebounce } from '@/hooks/useDebounce';

import { SearchInput } from '@/components/elements/SearchInput';
import { MovieMinimal } from '@/@types/movie.type';

type MovieSearchProps = {
	onResults: (movies: MovieMinimal[] | null) => void;
};

export const MovieSearch = ({ onResults }: MovieSearchProps) => {
	const [query, setQuery] = useState('');
	const debouncedQuery = useDebounce(query, 500);

	useEffect(() => {
		// üõ†Ô∏è –ù–µ —Ç—Ä–∏–≥–≥–µ—Ä–∏–º onResults –≤–æ–æ–±—â–µ, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è
		if (debouncedQuery === '') {
			onResults(null); // ‚¨ÖÔ∏è –í–∞–∂–Ω–æ! –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ initialMovies
			return;
		}

		const fetchData = async () => {
			try {
				const movies = await searchMovies(debouncedQuery);
				onResults(movies);
			} catch (error) {
				console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–æ–≤:', error);
				onResults([]);
			}
		};

		fetchData();
	}, [debouncedQuery, onResults]);

	return (
		<div className="mb-6">
			<SearchInput value={query} onChange={setQuery} />
		</div>
	);
};
